#!/bin/bash

# --- Configuration ---
DEFAULT_DEVICE="/dev/ttyUSB0" # Common default for ESP devices
AUTHOR="ShadowHarvy"

# --- Colors (Because dreary monochrome is so inefficient) ---
COLOR_RESET='\033[0m'
COLOR_TITLE='\033[1;36m'   # Bold Cyan
COLOR_GLADOS='\033[0;36m'  # Cyan
COLOR_INFO='\033[0;33m'    # Yellow
COLOR_COMMAND='\033[1;33m' # Bold Yellow
COLOR_SUCCESS='\033[0;32m' # Green
COLOR_ERROR='\033[0;31m'   # Red
COLOR_PROMPT='\033[1;35m'  # Bold Magenta

# --- Functions ---

# A crude simulation of progress. Adequate for organic patience levels.
fake_loader() {
  local duration=${1:-3} # Default 3 seconds
  local message=${2:-"Processing"}
  echo -en "${COLOR_GLADOS}${message}... ${COLOR_RESET}"
  for ((i = 0; i < ${duration}; i++)); do
    echo -n "."
    sleep 0.6
  done
  echo -e " ${COLOR_SUCCESS}Complete.${COLOR_RESET}"
  sleep 0.5
}

# --- Script Start ---

# Title Screen Sequence Initiated. Prepare your optical sensors.
clear
echo -e "${COLOR_TITLE}"
echo "======================================================"
echo "     Aperture Science ESP Permissions Facilitator     " # Tweaked title
echo "              (Microcontroller Protocol)              " # Tweaked subtitle
echo "======================================================"
echo -e "      Mandated Acknowledgment: Conceived by ${AUTHOR}"
echo -e "${COLOR_RESET}"
sleep 2

echo -e "${COLOR_GLADOS}Oh, it seems another... ${COLOR_INFO}*enthusiast*${COLOR_GLADOS}... wishes to interface with one of those quaint little ESP boards."
echo -e "How... ${COLOR_INFO}*electrifying*.${COLOR_RESET}"
sleep 1.5

# Fake Loading - Because apparently, you enjoy waiting.
fake_loader 4 "Calibrating ESP Interface Buffers & Checking System Sanity"

# --- Device Identification ---
echo -e "\n${COLOR_GLADOS}First, we need to identify your ESP device."
echo -e "${COLOR_GLADOS}It usually appears as ${COLOR_INFO}/dev/ttyUSB0${COLOR_GLADOS}, ${COLOR_INFO}/dev/ttyUSB1${COLOR_GLADOS}, etc., or sometimes ${COLOR_INFO}/dev/ttyACM0${COLOR_GLADOS}."
echo -e "${COLOR_GLADOS}If you're unsure, you can try the following in another terminal:"
echo -e "  1. Run ${COLOR_COMMAND}ls /dev/tty*${COLOR_RESET}"
echo -e "  2. ${COLOR_INFO}Plug in your ESP device.${COLOR_RESET}"
echo -e "  3. Run ${COLOR_COMMAND}ls /dev/tty*${COLOR_RESET} again. The new entry is your device."
echo -e "  Alternatively, after plugging in, run ${COLOR_COMMAND}dmesg | tail${COLOR_RESET} to see kernel messages about the new device."
sleep 1

read -p "$(echo -e ${COLOR_PROMPT}"Enter the device file for your ESP (e.g., /dev/ttyUSB0) [${DEFAULT_DEVICE}]: "${COLOR_RESET})" DEVICE
DEVICE="${DEVICE:-${DEFAULT_DEVICE}}" # Use default if input is empty

echo -e "\n${COLOR_GLADOS}Right. Let's analyze your... ${COLOR_INFO}*primitive*${COLOR_GLADOS} security configuration for device ${COLOR_INFO}${DEVICE}${COLOR_GLADOS}.${COLOR_RESET}"
sleep 1

# 1. Check if the device exists
if [ ! -e "$DEVICE" ]; then
  echo -e "${COLOR_ERROR}Error: Device ${DEVICE} not found. Did you forget to plug it in? Or perhaps it's shy.${COLOR_RESET}"
  echo -e "${COLOR_GLADOS}Ensure you've entered the correct device path. Those ESPs can be elusive.${COLOR_RESET}"
  exit 1
fi
echo -e "${COLOR_GLADOS}Device ${COLOR_INFO}${DEVICE}${COLOR_GLADOS} detected. A glimmer of hope, perhaps.${COLOR_RESET}"
sleep 1

# 2. Identify the group
echo -e "${COLOR_GLADOS}Executing archaic command to determine group ownership:${COLOR_RESET}"
echo -e "  ${COLOR_COMMAND}ls -l ${DEVICE}${COLOR_RESET}"
LS_OUTPUT=$(ls -l "$DEVICE")
echo -e "  ${COLOR_INFO}Output: ${LS_OUTPUT}${COLOR_RESET}"
sleep 0.5

DEVICE_GROUP=$(echo "$LS_OUTPUT" | awk '{print $4}')

if [ -z "$DEVICE_GROUP" ]; then
  echo -e "${COLOR_ERROR}Critical Failure: Could not extract group information. The system is clearly unimpressed with this ESP device.${COLOR_RESET}"
  exit 1
fi

echo -e "\n${COLOR_GLADOS}Analysis complete. The group with access privileges is: ${COLOR_INFO}${DEVICE_GROUP}${COLOR_GLADOS} (often 'dialout' or 'uucp' for these things).${COLOR_RESET}"
sleep 1.5
echo -e "${COLOR_GLADOS}Your user account is: ${COLOR_INFO}${USER}${COLOR_GLADOS}.${COLOR_RESET}"
sleep 1

# 3. Add user to the group
echo -e "\n${COLOR_GLADOS}Now, initiating the procedure to grant ${COLOR_INFO}${USER}${COLOR_GLADOS} access to group ${COLOR_INFO}${DEVICE_GROUP}${COLOR_GLADOS} for ESP communication."
echo -e "${COLOR_GLADOS}This requires elevated privileges. Prepare for the ${COLOR_INFO}sudo${COLOR_GLADOS} prompt. Don't disappoint me.${COLOR_RESET}"
sleep 1

echo -e "${COLOR_GLADOS}The command I am ${COLOR_INFO}*graciously*${COLOR_GLADOS} executing for you is:${COLOR_RESET}"
echo -e "  ${COLOR_COMMAND}sudo usermod -a -G ${DEVICE_GROUP} ${USER}${COLOR_RESET}"
sleep 1.5

read -p "$(echo -e ${COLOR_INFO}"Proceed with this modification? (y/N): "${COLOR_RESET})" -n 1 -r
echo # Move to a new line

if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo -e "${COLOR_GLADOS}Fine. Executing modification protocol... Try not to fry your ESP.${COLOR_RESET}"
  sudo usermod -a -G "${DEVICE_GROUP}" "${USER}"
  EXIT_STATUS=$?

  if [ $EXIT_STATUS -eq 0 ]; then
    echo -e "\n${COLOR_SUCCESS}Success. User ${USER} has been added to group ${DEVICE_GROUP}. Your ESP might actually talk to you now.${COLOR_RESET}"
    sleep 1
    echo -e "\n${COLOR_GLADOS}Crucial Information: For these changes to take effect, you ${COLOR_INFO}MUST log out and log back in${COLOR_GLADOS}, or ${COLOR_INFO}reboot your computer${COLOR_GLADOS}."
    echo -e "${COLOR_GLADOS}Do it. Patience is a virtue, even when dealing with blinking lights.${COLOR_RESET}"
  else
    echo -e "\n${COLOR_ERROR}Operation Failed. Exit status: ${EXIT_STATUS}.${COLOR_RESET}"
    echo -e "${COLOR_GLADOS}An error occurred. Did you mistype your password? Or perhaps the system has deemed your ESP project... ${COLOR_INFO}*suboptimal*.${COLOR_RESET}"
    echo -e "${COLOR_GLADOS}Consult the error messages above, if any were provided by the ${COLOR_INFO}sudo${COLOR_GLADOS} command.${COLOR_RESET}"
  fi
else
  echo -e "\n${COLOR_GLADOS}Procedure aborted by user. Perhaps you're not ready for the world of microcontrollers.${COLOR_RESET}"
fi

# Sign-off
echo -e "\n${COLOR_GLADOS}This concludes the ESP permissions protocol. May your serial monitor be free of errors... ${COLOR_INFO}*for now*.${COLOR_RESET}"
echo -e "${COLOR_TITLE}======================================================${COLOR_RESET}\n"

exit 0
