# ------------------------------------------------------------------
# Module: apps
# Loaded when: always
# Depends: none
# ------------------------------------------------------------------

# Shell, Apps, & Custom Commands
# ----------------------------------------------------------------------------

# Edit shell config files
alias reload-zsh="source \${ZDOTDIR:-\$HOME}/.zshrc"
alias edit-zsh="nvim \${ZDOTDIR:-\$HOME}/.zshrc"
alias edit-aliases="nvim \${ZDOTDIR:-\$HOME}/.aliases"

# Default Applications (Flatpak)
if command -v flatpak &>/dev/null; then
  alias vlc="flatpak run org.videolan.VLC"
  alias spotify="flatpak run com.spotify.Client"
  alias discord="flatpak run com.discordapp.Discord"
  alias teams="flatpak run com.microsoft.Teams"
  alias code="flatpak run com.visualstudio.code"
  alias studio="flatpak run com.visualstudio.code"
  alias obs="flatpak run com.obsproject.Studio"
  alias gimp="flatpak run org.gimp.GIMP"
  alias blender="flatpak run org.blender.Blender"
fi

# Development shortcuts
alias py='python3'
alias pip='python3 -m pip'
alias venv='python3 -m venv'
alias serve='python3 -m http.server'
alias json='python3 -m json.tool'
alias pyserver='python3 -m http.server 8080'

# Docker shortcuts
if command -v docker &>/dev/null; then
  alias d='docker'
  alias dc='docker-compose'
  alias dps='docker ps'
  alias dpsa='docker ps -a'
  alias di='docker images'
  alias dex='docker exec -it'
  alias drm='docker rm'
  alias drmi='docker rmi'
  alias dlog='docker logs -f'
  alias dprune='docker system prune -a'
fi

# Use bat as a pager and for cat if available
if command -v bat &>/dev/null; then
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
  # alias cat='bat -p'  # DISABLED: AUR builds need real cat - use 'view' instead
fi

# Installer shortcuts
alias christitus='curl -fsSL christitus.com/linux | sh'
alias christitusdev='curl -fsSL https://christitus.com/linuxdev | sh'

pkg-install() {
  [[ -z "$1" ]] && { echo "Usage: pkg-install <package> [--verbose]" >&2; return 1; }
  [[ -f ~/install.sh ]] && ~/install.sh "$@" || { echo "Error: install.sh not found." >&2; return 1; }
}

# Module loaded successfully
return 0
