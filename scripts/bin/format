#!/bin/bash

# SCRIPT: Interactively prepares formatting commands for an Arch Linux system.
# WARNING: The commands generated by this script will ERASE ALL DATA on the target disk.

# --- 0. Set Colors for Output ---
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# --- 1. Check for Root Privileges and Dependencies ---
if [ "$EUID" -ne 0 ]; then
  echo -e "${RED}Please run this script with sudo or as root.${NC}"
  exit 1
fi

echo -e "${BLUE}This script requires 'parted' and filesystem tools (like 'e2fsprogs', 'btrfs-progs').${NC}"
echo -e "${BLUE}Ensure they are installed with 'pacman -Syu parted <filesystem-tools>'.${NC}\n"

# --- 2. List Available Disks ---
echo -e "${YELLOW}Searching for available disks...${NC}"
lsblk -d -o NAME,SIZE,MODEL

# --- 3. Ask User to Select a Disk ---
DRIVE_LIST=$(lsblk -d -n -o NAME)
while true; do
  read -p "Enter the NAME of the disk you want to prepare (e.g., sdb): " DEVICE
  if echo "$DRIVE_LIST" | grep -w -q "$DEVICE"; then
    DEVICE_PATH="/dev/$DEVICE"
    break
  else
    echo -e "${RED}ERROR: Invalid device name. Please choose from the list.${NC}"
  fi
done

# --- 4. Ask User to Select a File System ---
echo -e "\n${BLUE}Common file systems: ext4, btrfs, f2fs, xfs, ntfs, exfat, vfat${NC}"
while true; do
  read -p "Enter the file system to use: " FS_TYPE
  case "$FS_TYPE" in
    ext4|btrfs|f2fs|xfs|ntfs|exfat|vfat)
      break
      ;;
    *)
      echo -e "${RED}ERROR: Invalid or unsupported file system.${NC}"
      ;;
  esac
done

# --- 5. Check for Mounted Partitions (CRITICAL SAFETY CHECK) ---
MOUNTED_PARTITIONS=$(lsblk -l -n "$DEVICE_PATH" | grep -E 'part|lvm' | awk '$7!="" {print $1,$7}')
if [ -n "$MOUNTED_PARTITIONS" ]; then
    echo -e "\n${RED}!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
    echo -e "MOUNTED PARTITIONS DETECTED on $DEVICE_PATH"
    echo -e "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!${NC}"
    echo -e "${YELLOW}The following partitions must be unmounted with 'umount <path>' before proceeding:${NC}"
    echo "$MOUNTED_PARTITIONS"
    exit 1
fi

# --- 6. Final Confirmation ---
echo -e "\n${RED}****************************************************************"
echo -e "          --->>> WARNING! DATA WILL BE ERASED <<<---        "
echo -e "****************************************************************${NC}"
echo "You have selected to prepare '${YELLOW}$DEVICE_PATH${NC}' with file system '${YELLOW}$FS_TYPE${NC}'."
echo "The script will now generate the commands to do this."
read -p "To confirm you understand, type 'ERASE' and press Enter: " CONFIRMATION

if [ "$CONFIRMATION" != "ERASE" ]; then
  echo -e "\n${GREEN}Confirmation not received. Aborting.${NC}"
  exit 0
fi

# --- 7. Generate Final Commands ---
# Determine partition name (e.g., /dev/sda1 or /dev/nvme0n1p1)
if [[ $DEVICE == nvme* ]]; then
  PARTITION_PATH="${DEVICE_PATH}p1"
else
  PARTITION_PATH="${DEVICE_PATH}1"
fi

echo -e "\n${GREEN}SUCCESS: Ready to proceed. No changes have been made yet.${NC}"
echo -e "${YELLOW}Execute the following commands MANUALLY to format your disk:${NC}"
echo "------------------------------------------------------------------"
echo -e "# 1. Wipe any old filesystem signatures (recommended)"
echo -e "${BLUE}wipefs --all $DEVICE_PATH${NC}"
echo
echo -e "# 2. Create a new GPT partition table and a single partition"
echo -e "${BLUE}parted $DEVICE_PATH --script -- mklabel gpt mkpart primary $FS_TYPE 1MiB 100%${NC}"
echo
echo -e "# 3. Format the new partition"
echo -e "${BLUE}mkfs.$FS_TYPE $PARTITION_PATH${NC}"
echo "------------------------------------------------------------------"
